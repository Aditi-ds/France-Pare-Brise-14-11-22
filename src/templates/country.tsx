import * as React from "react";
import Footer from "../components/layouts/footer";
import Header from "../components/layouts/header";
// import Banner from "../components/banner";
import BreadCrumbs from "../components/layouts/BreadCrumbs";
import "../index.css";
 import bannerImage from "../images/francepare1.png";
import favicon from "../images/favicon.png";
import {
  Template,
  GetPath,
  GetRedirects,
  TemplateConfig,
  TemplateProps,
  TemplateRenderProps,
  GetHeadConfig,
  HeadConfig,
} from "@yext/pages";
// import { stagingBaseUrl } from "../constants";
// import Logo from "../images/dreams-logo.svg";
var currentUrl = "";
export const config: TemplateConfig = {
  stream: {
    $id: "country",
    filter: {
      savedFilterIds: ["dm_franceparebrise-directory_address_countrycode"],
    },
    fields: [
      "id",
      "uid",
      "meta",
      "name",
      "description",
      "slug",
      "address",
      "c_metaTags",
      "c_ogMetaTag",
      "dm_directoryChildren.name",
      "dm_directoryChildren.slug",
      "dm_directoryChildren.dm_directoryChildrenCount",
      "dm_directoryParents.name",
      "dm_directoryParents.slug",
      "dm_directoryParents.meta.entityType"
    ],
    localization: {
      locales: ["fr"],
      primary: false,
    },
  },
};

export const getPath: GetPath<TemplateProps> = ({ document }) => {
  let slugString = "";
  document.dm_directoryParents.forEach((e: any) => {
    slugString += e.slug + "/";
  });
  currentUrl = slugString + document.slug.toString() + ".html";
  return "/" + document.slug.toString() + ".html";
};

export const getHeadConfig: GetHeadConfig<TemplateRenderProps> = ({
  relativePrefixToRoot,
  path,
  document,
}): HeadConfig => {
  return {
    title: document.name,
    charset: "UTF-8",
    viewport: "width=device-width, initial-scale=1",
    tags: [
      {
        type: "link",
        attributes: {
          rel: "icon",
          type: "image/x-icon",
          href: favicon,
        },
      },
    {
      type: "meta",
      attributes: {
        description: "This site was generated by the Yext SSG",
      },
    },
    {
      type: "meta",
      attributes: {
        name: "description",
        content: `${document.c_metaTags.description ? document.c_metaTags.description : ""
          }`,
      },
    },

    {
      type: "meta",
      attributes: {
        name: "title",
        content: `${document.c_metaTags.title ? document.c_metaTags.title : ""}`,
      },
    },
    {
      type: "meta",
      attributes: {
        name: "author",
        content: `${document.c_metaTags.author ? document.c_metaTags.author : ""}`,
      },
    },

    {
      type: "meta",
      attributes: {
        name: "robots",
        content: `${document.c_metaTags.robot ? document.c_metaTags.robot : ""}`,
      },
    },

    {
      type: "link",
      attributes: {
        rel: "canonical",
        href:
        "https://master-conflict--spoils--dispersal-sbx-pgsdemo-com.sbx.preview.pagescdn.com/" +
          ` ${document.c_metaTags.c_canonicalURL ? document.c_metaTags.c_canonicalURL : ""}`,
      },
    },
    // og tags

    {
      type: "meta",
      attributes: {
        property: "og:url",
        content: "https://master-conflict--spoils--dispersal-sbx-pgsdemo-com.sbx.preview.pagescdn.com/" + currentUrl,
      },
    },

    {
      type: "meta",
      attributes: {
        property: "og:description",
        content: `${document.c_ogMetaTag.ogdescription ? document.c_ogMetaTag.ogdescription : ""
          }`,
      },
    },
    {
      type: "meta",
      attributes: {
        property: "og:title",
        content: `${document.c_ogMetaTag.ogtitle ? document.c_ogMetaTag.ogtitle : ""}`,
      },
    },
    {
      type: "meta",
      attributes: {
        property: "og:image",

        content: `${document.logo ? document.logo.image.url : ""}`,
      },
    },
  ],
  };
};

const Country: Template<TemplateRenderProps> = ({
  relativePrefixToRoot,
  path,
  document,

}) => {
  const { description, dm_directoryChildren,address, dm_directoryParents, c_tagline } =
    document;
  const { name } = document;
 
  const childrenDivs = dm_directoryChildren.map((entity: any) => (
    <div className="contents w-1/2 md:w-1/3 lg:w-1/4 px-4 ">
      <a
        key={entity.slug}
        href={"/"+"fr"+"/" + entity.slug + ".html"}
        className="hover:text-red"
      >
        {entity.name} ({entity.dm_directoryChildrenCount})
      </a>
    </div>
  ));

  return (
    <>
    <div className="container-fluid">

    <Header/>
      <BreadCrumbs
        name={name}
        parents={dm_directoryParents}
        baseUrl={relativePrefixToRoot}
        address={address}
      ></BreadCrumbs>

      <div className="hero">
         <img className="heroBanner" src={bannerImage} alt=""/>
         <div className="hero-content">
           <h1><strong> All Regions of {name}{" "}</strong></h1>
         </div>
       </div>

      <div className="centered-container h-64 min-h-[500px]"> 
      <h3 className="sec_heading mt-12 font-serif uppercase" style={{ textAlign: "center" }}>
       
      </h3>
      <div className="directory-country py-5 lg:py-[60px] w-full h-100%">
        <div className="centered-container">
          <div className="grid grid-cols-3  p-6 m-6 shadow-lg  font-serif text-[24px] text-[#005571] bg-[#E1F4F2] hover:bg-[#15AA99]">{childrenDivs}</div>
        </div>
      </div>
      </div>
   <Footer/>
      </div>
    </>
  );
};

export default Country;
